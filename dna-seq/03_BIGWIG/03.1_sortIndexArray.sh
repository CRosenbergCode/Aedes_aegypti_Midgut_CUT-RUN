#!/usr/bin/env bash
#SBATCH -N 1
#SBATCH -n 4
#SBATCH --job-name=sortind_array
#SBATCH --partition=short-cpu
#SBATCH --output=%x.%j.log # gives jobname.ID.log
# Available partitions
# day-long-cpu
# day-long-gpu
# day-long-highmem
# exp-gpu
# short-cpu*
# short-gpu
# short-highmem
# week-long-cpu
# week-long-gpu
# week-long-highmem

# ================ 03.1_sortIndexArray.sh ==================
#
#  DESCRIPTION: A Slurm array script to sort/index many bams
#            at once. Requires an input file with the bams
#            to be sorted/indexed.
#
#  USAGE: sbatch --array=0-(number of bams minus 1) 03.1_sortIndexArray.sh $1
#
#  INPUTS: $1 - A plaintext file containing the paths to bams
#               to sort/index, one bam per line. This file is
#               auto-generated by the SICC_array.sh script.
#
#  OUTPUT: Sorted .bam and .bai files in the same folder
#          the inputs are in.
#
# ==========================================================

source activate base
conda init
conda activate deeptools_kernel

# Sort and index bams
linenum=0
while read -r line; do
	if [ $SLURM_ARRAY_TASK_ID -eq $linenum ]; then
		filename=$(echo $line | rev | cut -d/ -f1 | rev)
		filedir=$(dirname -- "$line")
		cd $filedir
		samtools sort $filename -o sorted_$filename --threads 4
		samtools index sorted_$filename --threads 4
	fi
	linenum=$((linenum + 1))
done < $1

